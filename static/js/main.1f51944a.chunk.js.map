{"version":3,"sources":["serviceWorker.ts","actions/actions.ts","reducers/reducers.ts","reducers/configureStore.ts","components/Picker/Picker.styles.ts","styles/common-animation.ts","styles/styles.ts","components/grid/grid-models.ts","components/grid/grid-styles.ts","components/grid/grid.tsx","components/Picker/Picker.tsx","components/Posts/Posts.styles.ts","components/Posts/Posts.tsx","components/AsyncApp/AsyncApp.styles.ts","components/AsyncApp/AsyncApp.tsx","views/Root.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","REQUEST_POSTS","RECEIVE_POSTS","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","fetchPosts","subreddit","dispatch","type","requestPosts","fetch","then","response","json","posts","data","children","map","child","receivedAt","Date","now","receivePosts","fetchPostsIfNeeded","getState","state","postsBySubreddit","isFetching","didInvalidate","shouldFetchPosts","rootReducer","combineReducers","action","Object","assign","items","lastUpdated","selectedSubreddit","loggerMiddleware","createLogger","templateStyles","createStyles","picker","display","justifyContent","picker__Container","letterSpacing","backgroundColor","border","color","width","fontSize","optionContainer","minWidth","clickAnimation","transform","starsAppear","opacity","zoomIn","imageContainerLoading","fadeInLeftBig","fadeInRightBig","shutterOutHorizontal","left","right","shutterOutHorizontalReverse","tada","heartBeat","click","jumpCardClick","clickSingleOption","clickMultipleOptionSelected","backgroundSize","backgroundPositionX","clickMultipleOptionUnselected","BREAK_POINTS","breakpointMinWidthMap","xs","sm","md","lg","xl","fontFamily","family","mediaQueryStr","maxWidth","mdAndUp","gridItemsAlignmentOptions","gridContentAlignmentOptions","gridDirectionOptions","gridSpacingOptions","gridJustificationOptions","gridWrapOptions","GRID_SIZES","defaultContianerStyles","defaultItemStyles","flexDirectionClassName","opt","flexWrapClassName","alignItemsClassName","alignContentClassName","justifyContentClassName","spacingClassName","gutter","gridItemClassName","gridSize","breakpoint","_Grid","this","props","container","item","classNameProp","className","spacing","justify","alignContent","alignItems","wrap","direction","classes","gridRef","other","classNames","push","join","ref","values","React","gridStyles","directionStyles","reduce","rMap","flexDirection","wrapStyles","flexWrap","alignItemsStyles","alignContentStyles","justifyContentStyles","spacingStyles","g","gStyles","gridItemStyles","bMap","size","percentage","zeroMinWidth","generateGridStyles","Grid","withStyles","Component","makeAnimated","value","onChange","options","e","target","option","key","Picker","marginTop","posts__gridItem","padding","postContainer","boxShadow","cursor","textAlign","borderRadius","height","post__heading","margin","post__headingText","lineHeight","post","i","onClick","open","url","src","title","style","text","trim","length","toLocaleUpperCase","substr","toLocaleLowerCase","Posts","asyncApp","textTransform","headerContainer","asyncApp__subHeading","subHeading__text","buttonContainer","fontWeight","handleChange","bind","handleRefreshClick","prevProps","nextSubreddit","preventDefault","toLocaleTimeString","Button","variant","AsyncApp","connect","store","preloadedState","createStore","applyMiddleware","thunkMiddleware","configureStore","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f51944a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import fetch from 'cross-fetch'\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\r\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\r\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\r\nexport function selectSubreddit(subreddit: any) {\r\n  return {\r\n    type: SELECT_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\nexport function invalidateSubreddit(subreddit: any) {\r\n  return {\r\n    type: INVALIDATE_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\nfunction requestPosts(subreddit: any) {\r\n  return {\r\n    type: REQUEST_POSTS,\r\n    subreddit\r\n  }\r\n}\r\nfunction receivePosts(subreddit: any, json: any) {\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    subreddit,\r\n    posts: json.data.children.map((child: any) => child.data),\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nfunction fetchPosts(subreddit: any) {\r\n  return (dispatch: any) => {\r\n    dispatch(requestPosts(subreddit))\r\n    return fetch(`https://www.reddit.com/r/${subreddit}.json`)\r\n      .then((response: any) => response.json())\r\n      .then((json: any) => dispatch(receivePosts(subreddit, json)))\r\n  }\r\n}\r\nfunction shouldFetchPosts(state: any, subreddit: any) {\r\n  const posts = state.postsBySubreddit[subreddit]\r\n  if (!posts) {\r\n    return true\r\n  } else if (posts.isFetching) {\r\n    return false\r\n  } else {\r\n    return posts.didInvalidate\r\n  }\r\n}\r\nexport function fetchPostsIfNeeded(subreddit: any) {\r\n  return (dispatch: any, getState: any) => {\r\n    if (shouldFetchPosts(getState(), subreddit)) {\r\n      return dispatch(fetchPosts(subreddit))\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport {\r\n    SELECT_SUBREDDIT,\r\n    INVALIDATE_SUBREDDIT,\r\n    REQUEST_POSTS,\r\n    RECEIVE_POSTS\r\n} from '../actions/actions'\r\nfunction selectedSubreddit(state = 'reactjs', action: any) {\r\n    switch (action.type) {\r\n        case SELECT_SUBREDDIT:\r\n            return action.subreddit\r\n        default:\r\n            return state\r\n    }\r\n}\r\nfunction posts(\r\n    state = {\r\n        isFetching: false,\r\n        didInvalidate: false,\r\n        items: []\r\n    },\r\n    action: any\r\n) {\r\n    switch (action.type) {\r\n        case INVALIDATE_SUBREDDIT:\r\n            return Object.assign({}, state, {\r\n                didInvalidate: true\r\n            })\r\n        case REQUEST_POSTS:\r\n            return Object.assign({}, state, {\r\n                isFetching: true,\r\n                didInvalidate: false\r\n            })\r\n        case RECEIVE_POSTS:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                didInvalidate: false,\r\n                items: action.posts,\r\n                lastUpdated: action.receivedAt\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\nfunction postsBySubreddit(state = {}, action: any) {\r\n    switch (action.type) {\r\n        case INVALIDATE_SUBREDDIT:\r\n        case RECEIVE_POSTS:\r\n        case REQUEST_POSTS:\r\n            return Object.assign({}, state, {\r\n                [action.subreddit]: posts({\r\n                    isFetching: false,\r\n                    didInvalidate: false,\r\n                    items: []\r\n                }, action)\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst rootReducer = combineReducers({\r\n    postsBySubreddit,\r\n    selectedSubreddit\r\n})\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nexport default function configureStore(preloadedState = {}) {\r\n    return createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        applyMiddleware(\r\n            thunkMiddleware,\r\n            loggerMiddleware\r\n        )\r\n    )\r\n}","import { createStyles } from '@material-ui/core'\r\nimport { CSSProperties } from '@material-ui/styles'\r\n\r\nconst templateObj: CSSProperties = {\r\n}\r\n\r\nexport const templateStyles = createStyles({\r\n    picker: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    picker__Container: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        \"& select\": {\r\n            \"borderRadius\": \"4px\",\r\n            \"padding\": \"8px 12px\",\r\n            letterSpacing: 0.5,\r\n            backgroundColor: \"#2f67e3\",\r\n            \"fontSize\": \"20px\",\r\n            // boxShadow: \"0px 0px 4px white\",\r\n            border: \"0.5px solid white\",\r\n            color: \"white\",\r\n            width: \"max-content\",\r\n            \"& option\": {\r\n                \"textAlign\": \"center\",\r\n                fontSize: 20,\r\n                \"background\": \"rgba(0, 0, 0, 0.3)\",\r\n                \"color\": \"#fff !important\",\r\n                \"textShadow\": \"0 1px 0 rgba(0, 0, 0, 0.4)\",\r\n                \"&:selected\": {\r\n                    color: \"white\"\r\n                }\r\n            }\r\n        },\r\n    },\r\n    optionContainer: {\r\n        minWidth: 200,\r\n        color: \"black !important\"\r\n    }\r\n})","export const clickAnimation = {\r\n    \"0%\": {\r\n        transform: \"scale(1)\"\r\n    },\r\n    \"50%\": {\r\n        transform: \"scale(0.95)\"\r\n    },\r\n    \"100%\": {\r\n        transform: \"scale(1)\"\r\n    }\r\n}\r\n\r\nexport const starsAppear = {\r\n    \"0%\": {\r\n        opacity: 0\r\n    },\r\n    \"100%\": {\r\n        opacity: 1\r\n    }\r\n}\r\n\r\nexport const zoomIn = {\r\n    \"0%\": {\r\n        opacity: 0,\r\n        transform: \"scale(0)\"\r\n    },\r\n    \"100%\": {\r\n        opacity: 1,\r\n        transform: \"scale(1)\"\r\n    }\r\n}\r\n\r\nexport const imageContainerLoading = {\r\n    \"0%\": {\r\n        backgroundColor: \"#e0e0e0\"\r\n    },\r\n    \"50%\": {\r\n        backgroundColor: \"#eeeeee\",\r\n    },\r\n    \"100%\": {\r\n        backgroundColor: \"#e0e0e0\"\r\n    }\r\n}\r\n\r\nexport const fadeInLeftBig = {\r\n    \"from\": {\r\n        opacity: 0,\r\n        transform: \"translate3d(-100%, 0, 0)\"\r\n    },\r\n    \"to\": {\r\n        opacity: 1,\r\n        transform: \"translate3d(0, 0, 0)\"\r\n    }\r\n}\r\n\r\nexport const fadeInRightBig = {\r\n    \"from\": {\r\n        opacity: 0,\r\n        transform: \"translate3d(100%, 0, 0)\"\r\n    },\r\n    \"to\": {\r\n        opacity: 1,\r\n        transform: \"translate3d(0, 0, 0)\"\r\n    }\r\n}\r\n\r\nexport const shutterOutHorizontal = {\r\n    \"from\": {\r\n        left: \"50%\",\r\n        right: \"50%\"\r\n    },\r\n    \"to\": {\r\n        left: \"0\",\r\n        right: \"0\"\r\n    }\r\n}\r\n\r\nexport const shutterOutHorizontalReverse = {\r\n    \"from\": {\r\n        left: \"0\",\r\n        right: \"0\"\r\n    },\r\n    \"to\": {\r\n        left: \"50%\",\r\n        right: \"50%\"\r\n    }\r\n}\r\n\r\nexport const tada = {\r\n    \"from\": {\r\n        transform: \"scale3d(1, 1, 1)\"\r\n    },\r\n    \"10%,20%\": {\r\n        transform: \"scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg)\"\r\n    },\r\n    \"30%,50%,70%,90%\": {\r\n        transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg)\"\r\n    },\r\n    \"40%,60%,80%\": {\r\n        transform: \"scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg)\"\r\n    },\r\n    \"to\": {\r\n        transform: \"scale3d(1, 1, 1)\"\r\n    }\r\n}\r\n\r\nexport const heartBeat = {\r\n    \"0%\": {\r\n        transform: \"scale(1)\"\r\n    },\r\n    \"14%\": {\r\n        transform: \"scale(1.1)\"\r\n    },\r\n    \"28%\": {\r\n        transform: \"scale(1)\"\r\n    },\r\n    \"42%\": {\r\n        transform: \"scale(1.1)\"\r\n    },\r\n    \"70%\": {\r\n        transform: \"scale(1)\"\r\n    }\r\n}\r\n\r\nexport const click = {\r\n    \"0%\": {\r\n        transform: \"scale(1)\"\r\n    },\r\n    \"50%\": {\r\n        transform: \"scale(0.95)\"\r\n    },\r\n    \"100%\": {\r\n        transform: \"scale(1)\"\r\n    }\r\n}\r\n\r\nexport const jumpCardClick = {\r\n    \"0%\": {\r\n        transform: \"scale(1)\"\r\n    },\r\n    \"50%\": {\r\n        transform: \"scale(0.8)\"\r\n    },\r\n    \"100%\": {\r\n        transform: \"scale(1)\"\r\n    }\r\n}\r\n\r\nexport const clickSingleOption = {\r\n    \"0%\": {\r\n        transform: \"scale(1)\"\r\n    },\r\n    \"50%\": {\r\n        transform: \"scale(0.975)\"\r\n    },\r\n    \"100%\": {\r\n        transform: \"scale(1)\"\r\n    }\r\n}\r\n\r\nexport const clickMultipleOptionSelected = {\r\n    \"0%\": {\r\n        backgroundSize: \"0px 0px\",\r\n        backgroundPositionX: \"calc(100% - 12px)\"\r\n    },\r\n    \"100%\": {\r\n        backgroundSize: \"24px 24px\",\r\n        backgroundPositionX: \"100%\"\r\n    }\r\n}\r\n\r\nexport const clickMultipleOptionUnselected = {\r\n    \"0%\": {\r\n        backgroundSize: \"0px 0px\",\r\n        backgroundPositionX: \"calc(100% - 12px)\"\r\n    },\r\n    \"100%\": {\r\n        backgroundSize: \"24px 24px\",\r\n        backgroundPositionX: \"100%\"\r\n    }\r\n}","import { CSSProperties } from '@material-ui/styles'\r\n\r\nimport * as commonAnimations from './common-animation'\r\n\r\nexport type Breakpoint = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"\r\nexport const BREAK_POINTS: Breakpoint[] = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]\r\nexport const breakpointMinWidthMap: { [x in Breakpoint]: number } = {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1920\r\n}\r\n\r\nconst fontFamily = (family: string): CSSProperties => {\r\n    return { fontFamily: family }\r\n}\r\nexport const proximaRegular = fontFamily(\"'ProximaNova-Regular', sans-serif\")\r\nexport const proximaRegularCondensed = fontFamily(\"'ProximaNova-RegularCondensed', sans-serif\")\r\nexport const avenirBold = fontFamily(\"'AvenirNextCondensed-Bold', sans-serif\")\r\nexport const robotoRegular = fontFamily(\"'Roboto-Regular', sans-serif\")\r\n\r\nexport const mediaQueryStr = (minWidth: number, maxWidth?: number): string => {\r\n    if (maxWidth) {\r\n        return `@media only screen and (max-width: ${maxWidth}px) and (min-width: ${minWidth}px)`\r\n    }\r\n    return `@media only screen and (min-width: ${minWidth}px)`\r\n}\r\n\r\nexport const smAndDown = () => mediaQueryStr(0, breakpointMinWidthMap[\"sm\"])\r\nexport const smAndUp = () => mediaQueryStr(breakpointMinWidthMap[\"sm\"])\r\nexport const mdAndUp = () => mediaQueryStr(breakpointMinWidthMap[\"md\"])\r\nexport const lgAndUp = () => mediaQueryStr(breakpointMinWidthMap[\"lg\"])\r\nexport const xlAndUp = () => mediaQueryStr(breakpointMinWidthMap[\"xl\"])\r\n\r\n//If required\r\n// export const smToMd = () => mediaQueryStr(breakpointMinWidthMap[\"sm\"], breakpointMinWidthMap[\"md\"])\r\n\r\n\r\nexport const pxStr = (arr: (number | string)[]): string => {\r\n    return arr.map(s => typeof s == \"number\" ? `${s}px` : s).join(\" \")\r\n}\r\n\r\ntype AnimationType = keyof typeof commonAnimations\r\nexport const includeAnimation = (type: AnimationType) => {\r\n    return {\r\n        [`@keyframes ${type}`]: {\r\n            ...commonAnimations[type]\r\n        }\r\n    }\r\n}","import { Breakpoint } from '../../styles/styles';\r\n\r\nexport type GridItemsAlignment = 'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline';\r\nexport const gridItemsAlignmentOptions: GridItemsAlignment[] = ['flex-start', 'center',\r\n    'flex-end', 'stretch', 'baseline']\r\n\r\nexport type GridContentAlignment =\r\n    | 'stretch'\r\n    | 'center'\r\n    | 'flex-start'\r\n    | 'flex-end'\r\n    | 'space-between'\r\n    | 'space-around';\r\nexport const gridContentAlignmentOptions: GridContentAlignment[] = ['stretch', 'center', 'flex-start',\r\n    'flex-end', 'space-between', 'space-around']\r\n\r\nexport type GridDirection = 'row' | 'row-reverse' | 'column' | 'column-reverse';\r\nexport const gridDirectionOptions: GridDirection[] = ['row', 'row-reverse', 'column', 'column-reverse']\r\n\r\nexport type GridSpacing = 0 | 2 | 4 | 6 | 8 | 10 | 12 | 14 | 16 |\r\n    18 | 20 | 22 | 24 | 26 | 28 | 30 | 32 | 34 | 36 | 38 | 40;\r\nexport const gridSpacingOptions: GridSpacing[] = [0, 2, 4, 6, 8, 10, 12, 14, 16,\r\n    18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40]\r\n\r\nexport type GridJustification =\r\n    | 'flex-start'\r\n    | 'center'\r\n    | 'flex-end'\r\n    | 'space-between'\r\n    | 'space-around'\r\n    | 'space-evenly';\r\nexport const gridJustificationOptions: GridJustification[] = ['flex-start', 'center',\r\n    'flex-end', 'space-between', 'space-around', 'space-evenly']\r\n\r\n\r\nexport type GridWrap = 'nowrap' | 'wrap' | 'wrap-reverse';\r\nexport const gridWrapOptions: GridWrap[] = ['nowrap', 'wrap', 'wrap-reverse']\r\n\r\nexport type GridSize = 'auto' | true | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\nexport const GRID_SIZES: GridSize[] = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\n\r\nexport interface GridProps\r\n    extends React.HTMLAttributes<HTMLElement>, Partial<Record<Breakpoint, boolean | GridSize>> {\r\n    innerRef?: React.Ref<any> | React.RefObject<any>;\r\n    gridRef?: (r: HTMLDivElement | null) => void\r\n    alignContent?: GridContentAlignment;\r\n    alignItems?: GridItemsAlignment;\r\n    container?: boolean;\r\n    direction?: GridDirection;\r\n    item?: boolean;\r\n    justify?: GridJustification;\r\n    spacing?: GridSpacing;\r\n    wrap?: GridWrap;\r\n    zeroMinWidth?: boolean;\r\n}\r\n\r\nexport type GridClassKey =\r\n    | 'container'\r\n    | 'item'\r\n    | 'direction-xs-column'\r\n    | 'direction-xs-column-reverse'\r\n    | 'direction-xs-row-reverse'\r\n    | 'wrap-xs-nowrap'\r\n    | 'wrap-xs-wrap-reverse'\r\n    | 'align-items-xs-center'\r\n    | 'align-items-xs-flex-start'\r\n    | 'align-items-xs-flex-end'\r\n    | 'align-items-xs-baseline'\r\n    | 'align-content-xs-center'\r\n    | 'align-content-xs-flex-start'\r\n    | 'align-content-xs-flex-end'\r\n    | 'align-content-xs-space-between'\r\n    | 'align-content-xs-space-around'\r\n    | 'justify-xs-center'\r\n    | 'justify-xs-flex-end'\r\n    | 'justify-xs-space-between'\r\n    | 'justify-xs-space-around'\r\n    | 'spacing-xs-8'\r\n    | 'spacing-xs-16'\r\n    | 'spacing-xs-24'\r\n    | 'spacing-xs-40'\r\n    | 'grid-xs-auto'\r\n    | 'grid-xs-true'\r\n    | 'grid-xs-1'\r\n    | 'grid-xs-2'\r\n    | 'grid-xs-3'\r\n    | 'grid-xs-4'\r\n    | 'grid-xs-5'\r\n    | 'grid-xs-6'\r\n    | 'grid-xs-7'\r\n    | 'grid-xs-8'\r\n    | 'grid-xs-9'\r\n    | 'grid-xs-10'\r\n    | 'grid-xs-11'\r\n    | 'grid-xs-12';","import { CSSProperties } from '@material-ui/styles'\r\n\r\nimport { BREAK_POINTS, Breakpoint, breakpointMinWidthMap, mediaQueryStr } from '../../../src/styles/styles'\r\nimport {\r\n    GRID_SIZES,\r\n    GridContentAlignment,\r\n    gridContentAlignmentOptions,\r\n    GridDirection,\r\n    gridDirectionOptions,\r\n    GridItemsAlignment,\r\n    gridItemsAlignmentOptions,\r\n    GridJustification,\r\n    gridJustificationOptions,\r\n    GridSize,\r\n    gridSpacingOptions,\r\n    GridWrap,\r\n    gridWrapOptions,\r\n} from './grid-models'\r\n\r\nexport const globalItemClassName = \"grid-item\"\r\nexport const globalContainerClassName = \"grid-container\"\r\nexport const defaultContianerStyles: CSSProperties = {\r\n    \"width\": \"100%\",\r\n    \"display\": \"flex\",\r\n    \"flexWrap\": \"wrap\",\r\n    \"boxSizing\": \"border-box\"\r\n}\r\n\r\nexport const defaultItemStyles: CSSProperties = {\r\n    \"margin\": \"0\",\r\n    \"boxSizing\": \"border-box\"\r\n}\r\n\r\nexport const itemStyles: CSSProperties = {\r\n    \"flexGrow\": 0,\r\n    \"maxWidth\": \"16.666667%\",\r\n    \"flexBasis\": \"16.666667%\"\r\n}\r\n\r\nexport const flexDirectionClassName = (opt: GridDirection) => `direction-xs-${opt}`\r\nexport const getFlexDirectionStyles = (): Record<string, CSSProperties> => {\r\n    return gridDirectionOptions.reduce<Record<string, CSSProperties>>((rMap, opt) => {\r\n        return {\r\n            ...rMap, [flexDirectionClassName(opt)]: { flexDirection: opt }\r\n        }\r\n    }, {})\r\n}\r\n\r\nexport const flexWrapClassName = (opt: GridWrap) => `wrap-xs-${opt}`\r\nexport const getFlexWrapStyles = (): Record<string, CSSProperties> => {\r\n    return gridWrapOptions.reduce<Record<string, CSSProperties>>((rMap, opt) => {\r\n        return {\r\n            ...rMap, [flexWrapClassName(opt)]: { flexWrap: opt }\r\n        }\r\n    }, {})\r\n}\r\n\r\nexport const alignItemsClassName = (opt: GridItemsAlignment) => `align-items-xs-${opt}`\r\nexport const getAlignItemsStyles = (): Record<string, CSSProperties> => {\r\n    return gridItemsAlignmentOptions.reduce<Record<string, CSSProperties>>((rMap, opt) => {\r\n        return {\r\n            ...rMap, [alignItemsClassName(opt)]: { alignItems: opt }\r\n        }\r\n    }, {})\r\n}\r\nexport const alignContentClassName = (opt: GridContentAlignment) => `align-content-xs-${opt}`\r\nexport const getAlignContentStyles = (): Record<string, CSSProperties> => {\r\n    return gridContentAlignmentOptions.reduce<Record<string, CSSProperties>>((rMap, opt) => {\r\n        return {\r\n            ...rMap, [alignContentClassName(opt)]: { alignContent: opt }\r\n        }\r\n    }, {})\r\n}\r\n\r\nexport const justifyContentClassName = (opt: GridJustification) => `justify-content-xs-${opt}`\r\nexport const getJustifyContentStyles = (): Record<string, CSSProperties> => {\r\n    return gridJustificationOptions.reduce<Record<string, CSSProperties>>((rMap, opt) => {\r\n        return {\r\n            ...rMap, [justifyContentClassName(opt)]: { justifyContent: opt }\r\n        }\r\n    }, {})\r\n}\r\n\r\nexport const spacingClassName = (gutter: number) => `spacing-xs-${gutter}`\r\nexport const getSpacingStyles = (): Record<string, CSSProperties> => {\r\n    return gridSpacingOptions.reduce<Record<string, CSSProperties>>((rMap, g) => {\r\n        const className = spacingClassName(g)\r\n        const gStyles = {\r\n            [className]: {\r\n                \"width\": `calc(100% + ${g}px)`,\r\n                \"margin\": `-${g / 2}px`,\r\n                [\"&>.\" + globalItemClassName]: {\r\n                    \"padding\": `${g / 2}px`\r\n                }\r\n            }\r\n        }\r\n        return { ...rMap, ...gStyles }\r\n    }, {})\r\n}\r\n\r\nexport const gridItemClassName = (gridSize: GridSize, breakpoint: Breakpoint) => `grid-${breakpoint}-${gridSize}`\r\nexport const getGridItemStyles = (): Record<string, CSSProperties> => {\r\n    return BREAK_POINTS.reduce<Record<string, CSSProperties>>((bMap, breakpoint) => {\r\n        let map = GRID_SIZES.reduce<Record<string, CSSProperties>>((rMap, size) => {\r\n            if (typeof size === \"number\") {\r\n                const percentage = (size / 12) * 100\r\n                return {\r\n                    ...rMap, [gridItemClassName(size, breakpoint)]: {\r\n                        \"flexGrow\": 0,\r\n                        \"maxWidth\": `${percentage}%`,\r\n                        \"flexBasis\": `${percentage}%`\r\n                    }\r\n                }\r\n            } else if (size === \"auto\") {\r\n                return {\r\n                    ...rMap, [gridItemClassName(size, breakpoint)]: {\r\n                        \"flexGrow\": 0,\r\n                        \"maxWidth\": \"none\",\r\n                        \"flexBasis\": \"auto\"\r\n                    }\r\n                }\r\n            } else {\r\n                return {\r\n                    ...rMap, [gridItemClassName(size, breakpoint)]: {\r\n                        \"flexGrow\": 1,\r\n                        \"maxWidth\": \"none\",\r\n                        \"flexBasis\": \"auto\"\r\n                    }\r\n                }\r\n            }\r\n        }, {})\r\n        const minWidth = breakpointMinWidthMap[breakpoint]\r\n        if (minWidth) {\r\n            map = { [mediaQueryStr(minWidth)]: map }\r\n        }\r\n        return { ...bMap, ...map }\r\n    }, {})\r\n}\r\n\r\nexport const generateGridStyles = (): Record<string, CSSProperties> => {\r\n    const directionStyles = getFlexDirectionStyles()\r\n    const wrapStyles = getFlexWrapStyles()\r\n    const alignItemsStyles = getAlignItemsStyles()\r\n    const alignContentStyles = getAlignContentStyles()\r\n    const justifyContentStyles = getJustifyContentStyles()\r\n    const spacingStyles = getSpacingStyles()\r\n    const gridItemStyles = getGridItemStyles()\r\n    return {\r\n        \"@global\": {\r\n            [\".\" + globalContainerClassName]: { ...defaultContianerStyles },\r\n            [\".\" + globalItemClassName]: defaultItemStyles,\r\n        },\r\n        zeroMinWidth: {\r\n            minWidth: 0\r\n        },\r\n        ...directionStyles,\r\n        ...wrapStyles,\r\n        ...alignItemsStyles,\r\n        ...alignContentStyles,\r\n        ...justifyContentStyles,\r\n        ...spacingStyles,\r\n        ...gridItemStyles\r\n    }\r\n}","import { WithStyles, withStyles } from '@material-ui/core'\r\nimport { values } from 'lodash'\r\nimport * as React from 'react'\r\n\r\nimport { GridProps } from './grid-models'\r\nimport {\r\n    alignContentClassName,\r\n    alignItemsClassName,\r\n    flexDirectionClassName,\r\n    flexWrapClassName,\r\n    generateGridStyles,\r\n    globalContainerClassName,\r\n    globalItemClassName,\r\n    gridItemClassName,\r\n    justifyContentClassName,\r\n    spacingClassName,\r\n} from './grid-styles'\r\n\r\nclass _Grid extends React.Component<GridProps & WithStyles<typeof gridStyles>>  {\r\n    render() {\r\n        const { container, item, children, className: classNameProp,\r\n            xs, sm, md, lg, xl, spacing, justify,\r\n            alignContent, alignItems, wrap, direction, classes, gridRef, ...other } = this.props\r\n\r\n        if (container) {\r\n            const classNames: string[] = [globalContainerClassName]\r\n            if (classNameProp) classNames.push(classNameProp)\r\n            if (spacing) classNames.push(classes[spacingClassName(spacing)])\r\n            if (justify) classNames.push(classes[justifyContentClassName(justify)])\r\n            if (alignContent) classNames.push(classes[alignContentClassName(alignContent)])\r\n            if (alignItems) classNames.push(classes[alignItemsClassName(alignItems)])\r\n            if (wrap) classNames.push(classes[flexWrapClassName(wrap)])\r\n            if (direction) classNames.push(classes[flexDirectionClassName(direction)])\r\n            return <div className={classNames.join(\" \")} ref={gridRef} {...other}> {children} </div>\r\n        } else if (item) {\r\n            const classNames: string[] = [globalItemClassName]\r\n            if (classNameProp) classNames.push(classNameProp)\r\n            if (xs) classNames.push(classes[gridItemClassName(xs, \"xs\")])\r\n            if (sm) classNames.push(classes[gridItemClassName(sm, \"sm\")])\r\n            if (md) classNames.push(classes[gridItemClassName(md, \"md\")])\r\n            if (lg) classNames.push(classes[gridItemClassName(lg, \"lg\")])\r\n            if (xl) classNames.push(classes[gridItemClassName(xl, \"xl\")])\r\n            return <div className={values(classNames).join(\" \")} ref={gridRef} {...other}> {children} </div>\r\n        } else {\r\n            throw \"grid should be either container or item\"\r\n        }\r\n    }\r\n}\r\n\r\nconst gridStyles = generateGridStyles()\r\nexport const Grid = withStyles(gridStyles)(_Grid)","import { WithStyles, withStyles } from '@material-ui/core'\r\nimport * as React from 'react'\r\n\r\nimport { templateStyles } from './Picker.styles'\r\nimport { Grid } from '../grid/grid'\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nexport interface PickerFieldProps {\r\n    options: string[]\r\n    value: string\r\n}\r\n\r\nexport interface PickerDispatchProps {\r\n    onChange: (nextSubreddit: any) => void\r\n}\r\n\r\ninterface Props extends PickerFieldProps, PickerDispatchProps, WithStyles<typeof templateStyles> { }\r\ninterface State { }\r\n\r\nclass Component extends React.Component<Props, State> {\r\n    render() {\r\n        const { value, onChange, options, classes } = this.props\r\n        return <Grid container spacing={16} className={classes.picker}>\r\n            <Grid item xs={12} ><h1>\r\n                {value}\r\n            </h1></Grid>\r\n            <Grid item xs={12} className={classes.picker__Container}>\r\n                {/* <Select\r\n                    aria-labelledby=\"ay-label\"\r\n                    onInputChange={() => onChange(e.target.in)}\r\n                    placeholder=\"Select\"\r\n                    // value={{ \"ReactJS\": \"ReactJS\" }}\r\n                    // onChange={e => onChange(e.target.value)}\r\n                    // name=\"subject\"\r\n                    options={[\r\n                        { value: 'ReactJS', label: 'ReactJS' },\r\n                        { value: 'Frontend', label: 'Frontend' },\r\n                        { value: 'ReduxJS', label: 'ReduxJS' },\r\n                    ]}\r\n                    // options={options.map(option => }\r\n                    className={classes.optionContainer}\r\n                    components={animatedComponents}\r\n                    classNamePrefix=\"select\"\r\n                // menuIsOpen={true}\r\n                /> */}\r\n                <select onChange={e => onChange(e.target.value)} value={value}>\r\n                    {options.map(option => (\r\n                        <option value={option} key={option}>\r\n                            {option}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </Grid>\r\n            {/* <FormControl variant=\"outlined\"\r\n            // className={classes.formControl}\r\n            >\r\n                <InputLabel\r\n                    // ref={inputLabel}\r\n                    id=\"demo-simple-select-outlined-label\">\r\n                    Age\r\n        </InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={value}\r\n                    onChange={e => onChange(e.target.value)}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>ReactJS</MenuItem>\r\n                    <MenuItem value={20}>Frontend</MenuItem>\r\n                    <MenuItem value={30}>ReduxJs</MenuItem>\r\n                </Select>\r\n            </FormControl> */}\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport const Picker = withStyles(templateStyles)(Component)","import { createStyles } from '@material-ui/core'\r\nimport { CSSProperties } from '@material-ui/styles'\r\nimport { smAndUp, mdAndUp } from '../../styles/styles'\r\n\r\n\r\nexport const templateStyles = createStyles({\r\n    posts: {\r\n        marginTop: 4,\r\n        [mdAndUp()]: {\r\n            marginTop: 16,\r\n        },\r\n    },\r\n    posts__gridItem: {\r\n        padding: 8,\r\n        [mdAndUp()]: {\r\n            padding: 16,\r\n        },\r\n    },\r\n    postContainer: {\r\n        display: \"flex\",\r\n        alignContent: \"center\",\r\n        boxShadow: \"0 0 4px #ffffff85\",\r\n        backgroundColor: \"rgba(255,255,255,0.8)\",\r\n        // border: \"0.5px solid white\",\r\n        cursor: \"pointer\",\r\n        flexWrap: \"wrap\",\r\n        textAlign: \"center\",\r\n        \"color\": \"black\",\r\n        borderRadius: 8,\r\n        \"& img\": {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"8px 0px 0px 8px\"\r\n        },\r\n    },\r\n    post__heading: {\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        fontFamily: \"'Open Sans', sans-serif\",\r\n        padding: 8,\r\n        textAlign: \"center\",\r\n        margin: \"0 !important\",\r\n        [mdAndUp()]: {\r\n            fontSize: 18,\r\n        },\r\n    },\r\n    post__headingText: {\r\n        \"color\": \"black !important\",\r\n        \"overflow\": \"hidden\",\r\n        \"textOverflow\": \"ellipsis\",\r\n        \"display\": \"-webkit-box\",\r\n        \"WebkitLineClamp\": 3,\r\n        \"WebkitBoxOrient\": \"vertical\",\r\n        lineHeight: 1.5,\r\n    }\r\n\r\n})","import { WithStyles, withStyles } from '@material-ui/core'\r\nimport * as React from 'react'\r\n\r\nimport { templateStyles } from './Posts.styles'\r\nimport { Grid } from '../grid/grid'\r\n\r\nexport const firstLetterCapital = (text: string) => (text && (text = text.trim()) && text.length > 0) ? (text[0].toLocaleUpperCase() + text.substr(1).toLocaleLowerCase()) : \"\"\r\nexport interface PostFieldProps {\r\n    title: string\r\n    url: string\r\n    images: []\r\n}\r\nexport interface PostsFieldProps {\r\n    posts: PostFieldProps[]\r\n}\r\n\r\nexport interface PostsDispatchProps { }\r\n\r\ninterface Props extends PostsFieldProps, PostsDispatchProps, WithStyles<typeof templateStyles> { }\r\ninterface State { }\r\n\r\nclass Component extends React.Component<Props, State> {\r\n    render() {\r\n        const { classes, posts } = this.props\r\n        return <Grid container spacing={16} className={classes.posts}>\r\n            {this.props.posts.map((post, i) => (\r\n                <Grid item xs={12} sm={6} md={6} lg={4} xl={3} className={classes.posts__gridItem}>\r\n                    <Grid container spacing={0} className={classes.postContainer} onClick={() => window.open(post.url, \"_blank\")}>\r\n                        <Grid item xs={4}>\r\n                            <img src={`https://source.unsplash.com/600x600/?${post.title}`}></img>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.post__heading}>\r\n                            <div key={i} style={{\r\n                                height: \"100%\",\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\"\r\n                            }}><p className={classes.post__headingText}>{firstLetterCapital(post.title)}</p></div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            ))\r\n            }\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport const Posts = withStyles(templateStyles)(Component)","import { createStyles } from '@material-ui/core'\r\nimport { CSSProperties } from '@material-ui/styles'\r\nimport { smAndUp, mdAndUp, lgAndUp } from '../../styles/styles'\r\n\r\nexport const templateStyles = createStyles({\r\n    asyncApp: {\r\n        \"textAlign\": \"left\",\r\n        \"color\": \"#282828\",\r\n        // background: \"rgba(255,255,255,0.25)\",\r\n        width: \"100%\",\r\n        \"margin\": \"auto\",\r\n        \"fontFamily\": \"'Open Sans', sans-serif !important\",\r\n        \"padding\": \"8px\",\r\n        // \"backgroundImage\": \"linear-gradient(141deg, #8ad2b2 0%, #1fdb99 44%, #3fc4f5 75%)\",\r\n        // \"borderRadius\": \"8px\",\r\n        // \"boxShadow\": \"0 2px 4px 0 rgba(51,51,51,.21)\",\r\n        // \"border\": \"1px solid #e8e8e8\",\r\n        // background: \"rgba(255,255,255,0.6)\",\r\n        \"& h1\": {\r\n            \"textAlign\": \"center\",\r\n            \"color\": \"white\",\r\n            textTransform: \"uppercase\",\r\n            \"padding\": \"12px 8px\",\r\n            letterSpacing: 12,\r\n            fontSize: 24,\r\n            [mdAndUp()]: {\r\n                fontSize: 30,\r\n            },\r\n            [lgAndUp()]: {\r\n                fontSize: 36,\r\n            },\r\n            fontWeight: 900,\r\n            \"margin\": \"0\"\r\n        },\r\n        \"& h2\": {\r\n            fontSize: 16,\r\n            width: \"100%\",\r\n            \"color\": \"white\",\r\n            \"overflow\": \"hidden\",\r\n            \"textOverflow\": \"ellipsis\",\r\n            \"display\": \"-webkit-box\",\r\n            \"WebkitLineClamp\": 2,\r\n            \"height\": \"56px\",\r\n            \"WebkitBoxOrient\": \"vertical\",\r\n            lineHeight: 1.5,\r\n            textAlign: \"center\",\r\n            margin: \"12px\",\r\n            [mdAndUp()]: {\r\n                fontSize: 18,\r\n            },\r\n        }\r\n    },\r\n    headerContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        \"color\": \"white\",\r\n\r\n        justifyContent: \"center\",\r\n    },\r\n    asyncApp__subHeading: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        \"color\": \"white\",\r\n    },\r\n    subHeading__text: {\r\n        color: \"white\",\r\n\r\n    },\r\n    buttonContainer: {\r\n        border: \"0.5px solid white\",\r\n        // boxShadow: \"0px 0px 4px white\",\r\n        \"fontFamily\": \"'Open Sans', sans-serif !important\",\r\n        letterSpacing: 1.5,\r\n        fontWeight: 700,\r\n        backgroundColor: \"#E80000\"\r\n    }\r\n})","import { WithStyles, withStyles, Button } from '@material-ui/core'\r\nimport * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    selectSubreddit,\r\n    fetchPostsIfNeeded,\r\n    invalidateSubreddit\r\n} from '../../actions/actions'\r\nimport { Picker } from '../Picker/Picker'\r\nimport { Posts } from '../Posts/Posts'\r\n\r\nimport { templateStyles } from './AsyncApp.styles'\r\nimport { Grid } from '../grid/grid'\r\n\r\nexport interface AsyncAppFieldProps {\r\n    selectedSubreddit: any\r\n    posts: []\r\n    isFetching: boolean\r\n    lastUpdated: number\r\n}\r\n\r\nexport interface AsyncAppDispatchProps {\r\n    dispatch: any\r\n}\r\n\r\ninterface Props extends AsyncAppFieldProps, AsyncAppDispatchProps, WithStyles<typeof templateStyles> { }\r\ninterface State { }\r\n\r\nclass Component extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleRefreshClick = this.handleRefreshClick.bind(this)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { dispatch, selectedSubreddit } = this.props\r\n        dispatch(fetchPostsIfNeeded(selectedSubreddit))\r\n    }\r\n    componentDidUpdate(prevProps: any) {\r\n        if (this.props.selectedSubreddit !== prevProps.selectedSubreddit) {\r\n            const { dispatch, selectedSubreddit } = this.props\r\n            dispatch(fetchPostsIfNeeded(selectedSubreddit))\r\n        }\r\n    }\r\n    handleChange(nextSubreddit: any) {\r\n        this.props.dispatch(selectSubreddit(nextSubreddit))\r\n        this.props.dispatch(fetchPostsIfNeeded(nextSubreddit))\r\n    }\r\n    handleRefreshClick(e: any) {\r\n        e.preventDefault()\r\n        const { dispatch, selectedSubreddit } = this.props\r\n        dispatch(invalidateSubreddit(selectedSubreddit))\r\n        dispatch(fetchPostsIfNeeded(selectedSubreddit))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedSubreddit, posts, isFetching, lastUpdated, classes } = this.props\r\n        return <Grid container spacing={16} className={classes.asyncApp}>\r\n            <Grid item xs={12} className={classes.headerContainer}><Picker\r\n                value={selectedSubreddit}\r\n                onChange={this.handleChange}\r\n                options={['ReactJS', 'Frontend', 'Reduxjs', 'Photography']}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.asyncApp__subHeading}>\r\n                {lastUpdated && (\r\n                    <div className={classes.subHeading__text}>\r\n                        Last updated at {new Date(lastUpdated).toLocaleTimeString()}.{' '}\r\n                    </div>\r\n                )}\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.asyncApp__subHeading}>\r\n                {!isFetching && (\r\n                    <div><Button onClick={this.handleRefreshClick} variant=\"contained\" color=\"secondary\" style={{ fontSize: 18, border: \"0.5px solid white !important\" }} className={classes.buttonContainer}>Refresh</Button></div>\r\n                )}\r\n            </Grid>\r\n            {isFetching && posts.length === 0 && <h2>Loading...</h2>}\r\n            {!isFetching && posts.length === 0 && <h2>Empty.</h2>}\r\n            {posts.length > 0 && (\r\n                <Grid item xs={12} style={{ opacity: isFetching ? 0.5 : 1 }}>\r\n                    <Posts posts={posts} />\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    }\r\n}\r\n\r\n\r\nexport const AsyncApp = withStyles(templateStyles)(Component)\r\n\r\nfunction mapStateToProps(state: any) {\r\n    const { selectedSubreddit, postsBySubreddit, classes } = state\r\n    const { isFetching, lastUpdated, items: posts } = postsBySubreddit[\r\n        selectedSubreddit\r\n    ] || {\r\n        isFetching: true,\r\n        items: []\r\n    }\r\n    return {\r\n        selectedSubreddit,\r\n        posts,\r\n        isFetching,\r\n        lastUpdated,\r\n        classes\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(AsyncApp)","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from '../reducers/configureStore'\r\nimport AsyncApp from '../components/AsyncApp/AsyncApp'\r\n\r\nconst store = configureStore()\r\n\r\nexport default class Root extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <AsyncApp />\r\n            </Provider>\r\n        )\r\n    }\r\n}","// import 'babel-polyfill'\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Root from './views/Root';\r\n\r\nReactDOM.render(\r\n    <Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}